/******************************************************************************\
|* UTILITIES
|* Mixins and other utilities
\******************************************************************************/

/**
 * 2-colour flags
 */
@mixin flag-2-colours($height, $colourBg, $colourCross, $horizontal, $vertical) {
    // Required calculations
    $sumHorizontal: sum($horizontal);
    $width: $sumHorizontal * $height / sum($vertical);
    $hoistGap: nth($horizontal, 1) * $width / $sumHorizontal;
    $crossWidth: nth($horizontal, 2) * $width / $sumHorizontal;
    
    // Base settings
    width: $width;
    height: $height;
    position: relative;
    background-color: $colourBg;
    
    // Vertical bar
    &::before {
        width: $crossWidth;
        top: 0;
        left: $hoistGap;
        bottom: 0;
    }
    
    // Horizontal bar
    &::after {
        height: $crossWidth;
        top: 50%;
        left: 0;
        right: 0;
        margin-top: -$crossWidth / 2;
    }
    
    // Common settings for both pseudo-elements
    &::before,
    &::after {
        background: $colourCross;
        content: "";
        display: block;
        position: absolute;
    }
}

/**
 * 3-colour flags
 */
@mixin flag-3-colours($height, $colourBg, $colourCrossOuter, $colourCrossInner, $horizontal, $vertical) {
    // Required calculations
    $sumHorizontal: sum($horizontal);
    $width: $sumHorizontal * $height / sum($vertical);
    $hoistGap: nth($horizontal, 1) * $width / $sumHorizontal;
    $outerWidth: nth($vertical, 2) * $width / $sumHorizontal;
    $innerWidth: nth($vertical, 3) * $width / $sumHorizontal;
    
    // Background colour stops
    $first:  $hoistGap + $outerWidth;
    $second: $first + $innerWidth;
    $third:  $second + $outerWidth;
    
    // Base settings
    width: $width;
    height: $height;
    position: relative;
    background: linear-gradient(
        to right,
        $colourBg $hoistGap,
        $colourCrossOuter $hoistGap,
        $colourCrossOuter $first,
        $colourCrossInner $first,
        $colourCrossInner $second,
        $colourCrossOuter $second,
        $colourCrossOuter $third,
        $colourBg $third,
        $colourBg
    ); // Hard colour stops composes the background and the vertical bar.
    
    // Outer vertical bar
    &::before {
        height: $innerWidth + $outerWidth * 2;
        margin-top: -($innerWidth / 2 + $outerWidth);
        background: linear-gradient(
            to right,
            $colourCrossOuter $first,
            transparent $first,
            transparent $second,
            $colourCrossOuter $second,
            $colourCrossOuter
        ); // A transparent bit keeps the outer section from cutting the inner.
    }
    
    // Inner vertical bar
    &::after {
        height: $innerWidth;
        margin-top: -($innerWidth / 2);
        background-color: $colourCrossInner;
    }

    // Common settings for both pseudo-elements
    &::before,
    &::after {
        content: "";
        display: block;
        width: $width;
        position: absolute;
        top: 50%;
        left: 0;
    }
}


/**
 * Sum - Sass function
 * More info on http://hugogiraudel.com/2013/10/09/advanced-sass-list-functions-again/
 */
@function sum($list, $force: false) {
    $result: 0;

    @each $item in $list {
        @if type-of($item) == number {
            @if $force and unit($item) {
                $item: $item / ($item * 0 + 1);
            }
            @if unitless($item) {
                $result: $result + $item;
            }
        }
    }

    @return $result;
}
